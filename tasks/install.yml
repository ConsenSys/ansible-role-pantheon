---
- name: Ensure Pantheon group exists
  group:
    name: "{{ pantheon_group }}"
    state: present
  become: true

- name: Create Pantheon user
  user:
    comment:  Pantheon client user
    name: "{{ pantheon_user }}"
    group: "{{ pantheon_group }}"
  become: true

- name: Create base directory
  file:
    path: "{{ pantheon_base_dir }}"
    state: directory
    owner: "{{ pantheon_user }}"
    group: "{{ pantheon_group }}"
  become: true

- name: Create install directory
  file:
    path: "{{ pantheon_install_dir }}"
    state: directory
    owner: "{{ pantheon_user }}"
    group: "{{ pantheon_group }}"
  become: true

- name: Create log directory
  file:
    path: "/var/log/pantheon"
    state: directory
    owner: "{{ pantheon_user }}"
    group: "{{ pantheon_group }}"
  become: true

- name: Setup logrotate
  template:
    src: "logrotate/pantheon"
    dest: "/etc/logrotate.d/pantheon"
  become: true

- name: Extract Pantheon source to install directory
  unarchive:
    src: "{{ pantheon_download_url }}"
    remote_src: true
    dest: "{{ pantheon_install_dir }}"
    owner: "{{ pantheon_user }}"
    group: "{{ pantheon_group }}"
    mode: '0775'
    extra_opts:
      - --strip-components
      - '1'
  become: true

# will throw error the first time you install since the service isnt present
- name: Stop Pantheon systemd service if running
  service:
    name: pantheon
    state: stopped
  when: ( pantheon_managed_service ) and
    ( ansible_os_family != "Darwin" )
  ignore_errors: true

- name: Create a symlink to current
  file:
    src: "{{ pantheon_install_dir }}/"
    dest: "{{ pantheon_current_dir }}"
    state: link
  become: true

- name: Add pantheon to system-wide $PATH
  copy:
    dest: "{{ pantheon_profile_file }}"
    content: 'PATH=$PATH:{{ pantheon_current_dir }}/bin'
  become: true
  when: ansible_os_family != "Darwin"
